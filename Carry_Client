--Client
local self = script.Parent
local events = game.ReplicatedStorage.Events
local carry_event = events.Carry

local UIS = game:GetService("UserInputService")
local localPlayer = game.Players.LocalPlayer
local camera = workspace.CurrentCamera
local mouse = localPlayer:GetMouse()
local RunService = game:GetService("RunService")

local function findCarriableAncestor(target)
	local current = target
	while current do
		if current:GetAttribute("CanBeCarried") == true or current:GetAttribute("CanBeCarried") == false then
			if current:IsA("Model") then
				return current.PrimaryPart
			else
				return current
			end
		end
		current = current.Parent
	end
	return nil
end

local limitDistance = 6

local IsCarrying = false
local isRotating = false
local Target
local camPos
UIS.InputBegan:Connect(function(input, isChatting)
	if not isChatting and input.UserInputType == Enum.UserInputType.MouseButton1 then
		if IsCarrying == false then
			if mouse.Target then
				Target = mouse.Target
				Target = findCarriableAncestor(Target)
				if Target then
					if (Target.CFrame.Position - camera.CFrame.Position).Magnitude < limitDistance then
						IsCarrying = true
						local delta_X = 0
						local delta_Y = 0
						while IsCarrying do
							local camCFrame = camera.CFrame
							local keyPressed
							camPos = camCFrame.Position + (camCFrame.LookVector * limitDistance)
							if isRotating then
								if UIS:IsKeyDown(Enum.KeyCode.W) then
									delta_X+=10
									keyPressed = "W"
								end

								if UIS:IsKeyDown(Enum.KeyCode.S) then
									delta_X-=10
									keyPressed = "S"
								end

								if UIS:IsKeyDown(Enum.KeyCode.A) then
									delta_Y+=10
									keyPressed = "A"
								end

								if UIS:IsKeyDown(Enum.KeyCode.D) then
									delta_Y-=10
									keyPressed = "D"
								end
							end
							carry_event:InvokeServer(IsCarrying, Target, camPos, camCFrame, delta_X, delta_Y, keyPressed)
							RunService.Heartbeat:Wait()
						end
					end
				end
			end
		end
	end

	if not isChatting and input.UserInputType == Enum.UserInputType.MouseButton2 then
		if IsCarrying == true then
			isRotating = true
			require(game.Players.LocalPlayer.PlayerScripts:WaitForChild("PlayerModule")):GetControls():Disable()
		end
	end
end)

UIS.InputEnded:Connect(function(input, isChatting)
	if not isChatting and input.UserInputType == Enum.UserInputType.MouseButton1 then
		if IsCarrying == true then
			IsCarrying = false
			isRotating = false
			require(game.Players.LocalPlayer.PlayerScripts:WaitForChild("PlayerModule")):GetControls():Enable()
			carry_event:InvokeServer(IsCarrying, Target, camPos, delta)
		end
	end

	if not isChatting and input.UserInputType == Enum.UserInputType.MouseButton2 then
		if IsCarrying == true then
			isRotating = false
			require(game.Players.LocalPlayer.PlayerScripts:WaitForChild("PlayerModule")):GetControls():Enable()
		end
	end
end)
